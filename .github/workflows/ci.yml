name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  QT_VERSION: 6.5.2
  CMAKE_VERSION: 3.16.0

jobs:
  build-and-test:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Debug, Release]
        include:
          - os: ubuntu-latest
            qt_arch: gcc_64
          - os: windows-latest
            qt_arch: win64_msvc2019_64
          - os: macos-latest
            qt_arch: clang_64
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libgl1-mesa-dev libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0
        
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install ninja
        
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install ninja
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        arch: ${{ matrix.qt_arch }}
        modules: 'qtbase qttools'
        cache: true
        
    - name: Setup MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
      
    - name: Configure CMake
      run: |
        cmake -S . -B build -G "Ninja Multi-Config" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        
    - name: Build
      run: |
        cmake --build build --config ${{ matrix.build_type }}
        
    - name: Run Tests
      run: |
        cd build
        ctest --output-on-failure --build-config ${{ matrix.build_type }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.build_type }}
        path: build/Testing/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}-${{ matrix.build_type }}
        path: |
          build/ProfessionalTicTacToe*
          !build/**/*.obj
          !build/**/*.o
